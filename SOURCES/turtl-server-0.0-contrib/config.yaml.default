---
server:
  # Per default, turtl will listen on all IP addresses
  # You can choose the IP it will use with this parameter
  #host: 127.0.0.1
  host:
  port: 8181

db:
  #connstr: 'postgres://dbusername:dbpassword@127.0.0.1:5432/database_instance
  connstr: 'postgres://turtl:YOUR_TURTL_DBUSER_PASSWORD@127.0.0.1:5432/turtl
  pool: 24

loglevel: 'debug'

app:
  # DO NOT CHANGE THIS
  # enable_bookmarker_proxys is ALWAYS false in production. Always.
  # Set to 'I UNDERSTAND THIS VIOLATES THE PRIVACY OF MY USERS' to enable
  enable_bookmarker_proxy: false

  # CHANGE THIS
  # Note: turtl.example.com and 198.51.100.35 are *example* domains for your
  #       Turtl Server.
  # Note: If you are having issues syncronizing arbitrary files or images
  #       (attachments) then some issue surrounding the "api_url" setting is
  #       probably to blame.
  #
  # If you are directly connecting to the Turtl Server
  # (i.e., not through Nginx)...
  #api_url: 'http://198.51.100.35:8181'
  #...or...
  #api_url: 'http://turtl.example.com:8181'
  #
  # If you using Nginx as your webserver and using a domainname,
  # but not using SSL...
  # Note that the api_url matches URL configured in the nginx config file.
  #api_url: 'http://turtl.example.com'
  #
  # If you using Nginx as your webserver and using a domainname,
  # but you *are* using SSL...
  # Note that the api_url matches URL configured in the nginx config file.
  api_url: 'https://turtl.example.com'

  www_url: 'https://example.com'
  emails:
    admin: 'bobby+admin@example.com'
    info: 'Turtl <info@example.com>'
    invites: 'invites@example.com'

  # CHANGE THIS
  # Replace this with a long, unique value. Seriously. Write down a dream
  # you had, or the short story you came up with during your creative writing
  # class in your freshmen year of college. Have fun with it.
  secure_hash_salt: "Plaque is a figment of the liberal media and the dental industry to scare you into buying useless appliances and pastes. Now, I've read the arguments on both sides and I haven't found any evidence yet to support the need to brush your teeth. Ever."

  # DO NOT CHANGE THIS
  # set to true if you think it's ok to SEND invites if you have not confirmed
  # your account. great for testing, not so great for production. but what do
  # i know...
  allow_unconfirmed_invites: false

sync:
  # how many sync records can a client send at a time? it's a good idea to have
  # a limit here, lest a rogue client flood the server with sync items
  max_bulk_sync_records: 32

plugins:
  # plugin_location, DO NOT CHANGE THIS (probably)
  #plugin_location: '/var/www/turtl/server/plugins'
  plugin_location: '/usr/share/turtl-server/plugins'
  # each key here corresponds to a folder name in the plugins folder, so `email`
  # below would be a plugin at /usr/share/turtl-server/plugins/email (see the
  # example-plugins/ folder for an email plugin you can use)
  email:
    enabled: false
    endpoint: 'smtps://user:password@smtp.gmail.com/?pool=true'
    defaults: {}

uploads:
  # if set to a path, files will be uploaded to the local filesystem instead of
  # S3. otherwise, set to false
  #local: '/var/www/turtl/server/public/uploads'
  local: '/var/lib/turtl-server/public/uploads'
  # if true, downloading local files will be proxied through the turtl server.
  # this avoids needing to set up any CORS config in your favorite webserver,
  # but may slightly affect performance on high-demand servers.
  local_proxy: true
  # if local_proxy is false, this is should be the url path the uploaded files
  # are publicly available on
  url: 'http://api.turtl.dev/uploads'

s3:
  # Default configuration doesn't use this.
  token: 'IHADAPETSNAKEBUTHEDIEDNOOOOO'
  secret: ''
  bucket: ''
  endpoint: 'https://s3.amazonaws.com'

